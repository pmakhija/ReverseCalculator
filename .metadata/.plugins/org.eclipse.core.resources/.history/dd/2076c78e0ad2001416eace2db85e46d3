package main.java;

import java.util.Stack;

public class RPNPostFix {
	
	public double calculate(String[] arr) throws Exception{
		
		Stack<Double> inputStack = new Stack<Double>();
		double result=0;
		for(int i=0; i<arr.length; i++){
		
			try{
				inputStack.push(Double.parseDouble(arr[i]));
			}catch(Exception e){
				double rightVariable ;
				double leftVariable ;
				switch(arr[i]){
				case "+": 
					rightVariable = inputStack.pop();
					leftVariable = inputStack.pop(); 
					result = leftVariable + rightVariable;
					inputStack.push(result);
					break;
				case "-": 
					rightVariable = inputStack.pop();
					leftVariable = inputStack.pop();
					result = leftVariable - rightVariable;
					inputStack.push(result);
					break;
				case "*": 
					 rightVariable = inputStack.pop();
					 leftVariable = inputStack.pop();
					result = leftVariable * rightVariable;
					inputStack.push(result);
					break;
				case "/":
					rightVariable = inputStack.pop();
					leftVariable = inputStack.pop();
					result = leftVariable / rightVariable;
					inputStack.push(result);
					break;
				
				case "!":
					rightVariable = inputStack.pop();
					result = rightVariable * (rightVariable-1) / 2;
					inputStack.push(result);
					break;
				
					
					
				default: throw new Exception();
				}
			}
			
			
		}
		return result;
	}

}
